name: CI/CD Pipeline

on:
  pull_request:
  push:

jobs:
  lint-and-tests:
    name: Lint, Prettier Check, Unit and Integration Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.11.0]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      # Clone the source code from the repository into the runtime environment (checkout)
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Node.js
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./package.json"

      # Install dependencies
      - name: Install dependencies
        run: npm i --legacy-peer-deps

      # Lint and Prettier check
      - name: Lint & Prettier checks
        run: npm run lint

      # Wait for the database service to be healthy
      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432 -U user -d test_db; do echo waiting for postgres; sleep 5; done

      # Set up environment variables for Prisma
      - name: Set up database URL
        run: echo "DATABASE_URL=postgresql://user:password@localhost:5432/test_db?schema=public" >> $GITHUB_ENV

      # Run Prisma migrations
      - name: Run Prisma migrations
        run: npx prisma migrate deploy

      # Run Unit and Integration Tests
      - name: Run Unit and Integration Tests
        run: npm test
